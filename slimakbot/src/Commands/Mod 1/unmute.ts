import { MessageEmbed, Snowflake } from "discord.js";
import { guildSettings } from "../../db/models/guildSettings";
import { UnixesTimes } from "../../db/models/unixesTimes";
import { COMMAND, util } from "../../struct";

const cmd: COMMAND = {
	name: "unmute",
	cooldown: 2,
	aliases: ["—Ä–∞–∑–º—å—é—Ç", "—Ä–∞–∑–º—É—Ç", "–∞–Ω–º—É—Ç", "—Å–Ω—è—Ç—å–º—É—Ç"],
	example: ["unmute userID", "unmute @mention"],
	helpInfo: "–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–Ω—è—Ç–∏—è –º—É—Ç–∞ —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞",
	category: "Mod 1",
	permission: "Moderator",
	run: async (Client, message, args) => {
		const target = await util.getDiscordMember(message, {
			uid: args[0] as Snowflake,
			returnNothing: true,
		});

		if (!target) {
			return util.errorMessage(message, {
				text: "–í–∞–º –Ω—É–∂–Ω–æ —É–ø–æ–º—è–Ω—É—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–ª–∏ —É–∫–∞–∑–∞—Ç—å –µ–≥–æ ID",
				reply: true,
			});
		}

		const gSettings = await util.findOneOrCreate(
			guildSettings,
			{ gid: message.guild?.id },
			{ gid: message.guild?.id }
		);

		if (!gSettings?.muteRole) {
			return util.errorMessage(message, {
				text: "–ú–Ω–æ—é –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ –µ—â–µ –Ω–µ –≤—ã–¥–∞–≤–∞–ª–∏—Å—å –º—É—Ç—ã",
				reply: true,
			});
		}

		const hasRole = target.roles.cache.has(gSettings.muteRole);
		switch (true) {
			case hasRole:
				target.roles.remove(gSettings.muteRole);
				await UnixesTimes.findOneAndDelete({
					uid: target.id,
					roleID: gSettings.muteRole,
				});

				const embed = new MessageEmbed()
					.setColor(message.member?.displayColor!)
					.setDescription(
						`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${message.author.toString()} —Å–Ω—è–ª —Å –≤–∞—Å **–º—É—Ç** üëèüèª`
					);

				message.channel.send({ content: target.toString(), embeds: [embed] });
				break;
			default:
				return util.errorMessage(message, {
					text: "–£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –º—É—Ç–∞",
					reply: true,
				});
		}
	},
};

export default cmd;
